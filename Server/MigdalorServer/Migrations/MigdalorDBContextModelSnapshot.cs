// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MigdalorServer.Database;

#nullable disable

namespace MigdalorServer.Migrations
{
    [DbContext(typeof(MigdalorDBContext))]
    partial class MigdalorDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MigdalorServer.Models.OhActivity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("activityName");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<int?>("HostId")
                        .HasColumnType("int")
                        .HasColumnName("hostID");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("location");

                    b.Property<int?>("PicId")
                        .HasColumnType("int")
                        .HasColumnName("PicID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("startDate");

                    b.HasKey("ActivityId")
                        .HasName("PK__OH_Activ__0FC9CBCCA19CF83A");

                    b.HasIndex("HostId");

                    b.HasIndex("PicId");

                    b.HasIndex(new[] { "ActivityName" }, "UQ__OH_Activ__BD8CC0A9662B06D5")
                        .IsUnique();

                    b.ToTable("OH_Activities");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhCategory", b =>
                {
                    b.Property<string>("CategoryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryName")
                        .HasName("PK__OH_Categ__8517B2E13E0D2B85");

                    b.ToTable("OH_Categories");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhClass", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("classID");

                    b.Property<bool?>("IsRecurring")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isRecurring");

                    b.Property<string>("RecurrenceDetails")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("recurrenceDetails");

                    b.Property<int>("RecurrenceLevel")
                        .HasColumnType("int")
                        .HasColumnName("recurrenceLevel");

                    b.Property<int?>("SessionAmount")
                        .HasColumnType("int")
                        .HasColumnName("sessionAmount");

                    b.HasKey("ClassId")
                        .HasName("PK__OH_Class__7577345E11E38252");

                    b.ToTable("OH_Classes");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhNotice", b =>
                {
                    b.Property<int>("NoticeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("noticeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoticeId"));

                    b.Property<DateOnly?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NoticeCategory")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("noticeCategory");

                    b.Property<string>("NoticeMessage")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("noticeMessage");

                    b.Property<int?>("NoticeSubCategory")
                        .HasColumnType("int")
                        .HasColumnName("noticeSubCategory");

                    b.Property<string>("NoticeTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("noticeTitle");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("senderID");

                    b.HasKey("NoticeId")
                        .HasName("PK__OH_Notic__4ED12E4ED40ADBB5");

                    b.HasIndex("NoticeCategory");

                    b.HasIndex("SenderId");

                    b.ToTable("OH_Notices");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhParticipation", b =>
                {
                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasColumnName("activityID");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int")
                        .HasColumnName("participantID");

                    b.Property<DateOnly>("ParticipationDate")
                        .HasColumnType("date")
                        .HasColumnName("participationDate");

                    b.HasKey("ActivityId", "ParticipantId", "ParticipationDate")
                        .HasName("PK__OH_Parti__172E5FA018314B66");

                    b.HasIndex("ParticipantId");

                    b.ToTable("OH_Participation");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhPermission", b =>
                {
                    b.Property<string>("PermissionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("permissionName");

                    b.HasKey("PermissionName")
                        .HasName("PK__OH_Permi__70661EFD0FB17EC0");

                    b.ToTable("OH_Permissions");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhPerson", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("personID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("Email")
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)")
                        .HasColumnName("email");

                    b.Property<string>("EngFirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("engFirstName");

                    b.Property<string>("EngLastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("engLastName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValue("U")
                        .HasColumnName("gender")
                        .IsFixedLength();

                    b.Property<string>("HebFirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("hebFirstName");

                    b.Property<string>("HebLastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("hebLastName");

                    b.Property<int?>("ProfilePicId")
                        .HasColumnType("int")
                        .HasColumnName("profilePicID");

                    b.HasKey("PersonId")
                        .HasName("PK__OH_Peopl__EC7D7D6DF8F28E22");

                    b.HasIndex("ProfilePicId");

                    b.ToTable("OH_People");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhPicture", b =>
                {
                    b.Property<int>("PicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("picID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PicId"));

                    b.Property<string>("PicAlt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("picAlt");

                    b.Property<string>("PicName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("picName");

                    b.Property<string>("PicPath")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("picPath");

                    b.HasKey("PicId")
                        .HasName("PK__OH_Pictu__06707FCD5CA26DEA");

                    b.ToTable("OH_Pictures");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhResident", b =>
                {
                    b.Property<int>("ResidentId")
                        .HasColumnType("int")
                        .HasColumnName("residentID");

                    b.Property<int?>("AdditionalPic1Id")
                        .HasColumnType("int")
                        .HasColumnName("additionalPic1ID");

                    b.Property<int?>("AdditionalPic2Id")
                        .HasColumnType("int")
                        .HasColumnName("additionalPic2ID");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("branchName");

                    b.Property<bool>("CanInitActivity")
                        .HasColumnType("bit")
                        .HasColumnName("canInitActivity");

                    b.Property<DateOnly>("DateOfArrival")
                        .HasColumnType("date")
                        .HasColumnName("dateOfArrival");

                    b.Property<bool>("HasLoggedIn")
                        .HasColumnType("bit")
                        .HasColumnName("hasLoggedIn");

                    b.Property<string>("HomePlace")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("homePlace");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive");

                    b.Property<bool>("IsBokerTov")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isBokerTov");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("phoneNumber")
                        .IsFixedLength();

                    b.Property<string>("Profession")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("profession");

                    b.Property<string>("ResidentDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("residentDescription");

                    b.Property<int>("SpouseId")
                        .HasColumnType("int")
                        .HasColumnName("spouseID");

                    b.HasKey("ResidentId")
                        .HasName("PK__OH_Resid__9AD71856DD7E720C");

                    b.HasIndex("AdditionalPic1Id");

                    b.HasIndex("AdditionalPic2Id");

                    b.HasIndex("SpouseId");

                    b.ToTable("OH_Residents");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhRoom", b =>
                {
                    b.Property<int>("RoomNumber")
                        .HasColumnType("int")
                        .HasColumnName("roomNumber");

                    b.Property<int>("BuildingNumber")
                        .HasColumnType("int")
                        .HasColumnName("buildingNumber");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<string>("RoomName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("roomName");

                    b.HasKey("RoomNumber", "BuildingNumber")
                        .HasName("PK__OH_Rooms__CD87FECFF4277B52");

                    b.ToTable("OH_Rooms");
                });

            modelBuilder.Entity("OhPersonBlockedPermission", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("personID");

                    b.Property<string>("PermissionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("permissionName");

                    b.HasKey("PersonId", "PermissionName")
                        .HasName("PK__OH_Perso__2B7B1C82105D4EA9");

                    b.HasIndex("PermissionName");

                    b.ToTable("OH_PersonBlockedPermissions", (string)null);
                });

            modelBuilder.Entity("MigdalorServer.Models.OhActivity", b =>
                {
                    b.HasOne("MigdalorServer.Models.OhPerson", "Host")
                        .WithMany("OhActivities")
                        .HasForeignKey("HostId")
                        .HasConstraintName("FK_Activities_Host");

                    b.HasOne("MigdalorServer.Models.OhPicture", "Pic")
                        .WithMany("OhActivities")
                        .HasForeignKey("PicId")
                        .HasConstraintName("FK_Activities_Pic");

                    b.Navigation("Host");

                    b.Navigation("Pic");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhClass", b =>
                {
                    b.HasOne("MigdalorServer.Models.OhActivity", "Class")
                        .WithOne("OhClass")
                        .HasForeignKey("MigdalorServer.Models.OhClass", "ClassId")
                        .IsRequired()
                        .HasConstraintName("FK_Classes_Activities");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhNotice", b =>
                {
                    b.HasOne("MigdalorServer.Models.OhCategory", "NoticeCategoryNavigation")
                        .WithMany("OhNotices")
                        .HasForeignKey("NoticeCategory")
                        .HasConstraintName("FK_Notices_Category");

                    b.HasOne("MigdalorServer.Models.OhResident", "Sender")
                        .WithMany("OhNotices")
                        .HasForeignKey("SenderId")
                        .HasConstraintName("FK_Notices_Sender");

                    b.Navigation("NoticeCategoryNavigation");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhParticipation", b =>
                {
                    b.HasOne("MigdalorServer.Models.OhActivity", "Activity")
                        .WithMany("OhParticipations")
                        .HasForeignKey("ActivityId")
                        .IsRequired()
                        .HasConstraintName("FK_Participation_Activity");

                    b.HasOne("MigdalorServer.Models.OhPerson", "Participant")
                        .WithMany("OhParticipations")
                        .HasForeignKey("ParticipantId")
                        .IsRequired()
                        .HasConstraintName("FK_Participation_Participant");

                    b.Navigation("Activity");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhPerson", b =>
                {
                    b.HasOne("MigdalorServer.Models.OhPicture", "ProfilePic")
                        .WithMany("OhPeople")
                        .HasForeignKey("ProfilePicId")
                        .HasConstraintName("FK_People_ProfilePic");

                    b.Navigation("ProfilePic");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhResident", b =>
                {
                    b.HasOne("MigdalorServer.Models.OhPicture", "AdditionalPic1")
                        .WithMany("OhResidentAdditionalPic1s")
                        .HasForeignKey("AdditionalPic1Id")
                        .HasConstraintName("FK_Residents_AdditionalPic1");

                    b.HasOne("MigdalorServer.Models.OhPicture", "AdditionalPic2")
                        .WithMany("OhResidentAdditionalPic2s")
                        .HasForeignKey("AdditionalPic2Id")
                        .HasConstraintName("FK_Residents_AdditionalPic2");

                    b.HasOne("MigdalorServer.Models.OhPerson", "Resident")
                        .WithOne("OhResident")
                        .HasForeignKey("MigdalorServer.Models.OhResident", "ResidentId")
                        .IsRequired()
                        .HasConstraintName("FK_Residents_People");

                    b.HasOne("MigdalorServer.Models.OhResident", "Spouse")
                        .WithMany("InverseSpouse")
                        .HasForeignKey("SpouseId")
                        .IsRequired()
                        .HasConstraintName("FK_Residents_Spouse");

                    b.Navigation("AdditionalPic1");

                    b.Navigation("AdditionalPic2");

                    b.Navigation("Resident");

                    b.Navigation("Spouse");
                });

            modelBuilder.Entity("OhPersonBlockedPermission", b =>
                {
                    b.HasOne("MigdalorServer.Models.OhPermission", null)
                        .WithMany()
                        .HasForeignKey("PermissionName")
                        .IsRequired()
                        .HasConstraintName("FK_PersonPermissions_Permission");

                    b.HasOne("MigdalorServer.Models.OhPerson", null)
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .IsRequired()
                        .HasConstraintName("FK_PersonPermissions_Person");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhActivity", b =>
                {
                    b.Navigation("OhClass");

                    b.Navigation("OhParticipations");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhCategory", b =>
                {
                    b.Navigation("OhNotices");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhPerson", b =>
                {
                    b.Navigation("OhActivities");

                    b.Navigation("OhParticipations");

                    b.Navigation("OhResident");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhPicture", b =>
                {
                    b.Navigation("OhActivities");

                    b.Navigation("OhPeople");

                    b.Navigation("OhResidentAdditionalPic1s");

                    b.Navigation("OhResidentAdditionalPic2s");
                });

            modelBuilder.Entity("MigdalorServer.Models.OhResident", b =>
                {
                    b.Navigation("InverseSpouse");

                    b.Navigation("OhNotices");
                });
#pragma warning restore 612, 618
        }
    }
}
